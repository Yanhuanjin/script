#!/bin/bash
if [ "$1" == "-h" -o "$1" == "--help" ];then
	cat > temp_x2p_help << EOF

[34m#########################################################################
EOF
	cat temp_x2p_help
	rm -rf temp_x2p_help
	exit 0
fi
rm -rf temp_x2p_*

#default
cpot=1
cscript=1
ckpoint=0
setmag=0
setpU=0
incell=0
posfm=5
potmode=ori
potdir=~/pot/siesta/siesta_official/
#potdir=/home/users/xmcao/yhjin/scripts/pot/siesta/
#potdir=/data/pot/vasp/potpaw_PBE.54/
#potdir=/data/pot/vasp/potpaw_PBE2010/
examdir=~/example/siesta/
#pUdir=$HOME/script/Uvalue/
cmark=_c
sortZ=0        #>0:sort by atoms Z axis; 0: only sort by atom element name.
potcfgdir=$HOME
kpoint_acc=21

xsdfile=`ls *.xsd 2> /dev/null| head -1`

if [ ! -f "$xsdfile" ];then 
	rz  #2>&1 > /dev/null
fi
xsdfile=`ls *.xsd 2> /dev/null| head -1`
if [ ! -f "$xsdfile" ];then 
    exit 0
fi

workdir=`pwd`
xsdfile=`ls *.xsd | head -1`

echo -e "\n  >>>>>>>>>>>>>>>>>> Check Information <<<<<<<<<<<<<<<<<<\n"

#import the setting files
cd $HOME
if [[ -f .setting_xsd2pos ]];then
	sed -i 's/ //g'  .setting_xsd2pos
	. .setting_xsd2pos
	echo -e "    Read setting in home directory."
fi
for i in `echo $workdir  | sed 's,/[^/]*/[^/]*/'$USER'/,,;s,/,  ,g'`
do
	cd $i
	if [[ -f .setting_xsd2pos ]];then
		sed -i 's/ //g' ./.setting_xsd2pos
		. ./.setting_xsd2pos
		echo -e "    Read setting in work directory."
		echo -e "    (\033[35;1m$DIRSTACK\033[0m)"
	fi
done
cd $workdir



#read ARGV#
until [[ $# -eq 0 ]]
do
	if [[ $1 =~ "=" ]];then
		argvs1=`echo $1 | awk -F = '{print $1}'`
		argvs2=`echo $1 | awk -F = '{print $2}'`
		if [ -z "$argvs1" -o -z "$argvs2" ];then
			echo -e "     Error in Read ARGV, Exit!!!  "
			exit 
		fi
		eval $argvs1=$argvs2	
	elif [[ $1 == "ori" ]]; then
		potmode=ori
	elif [[ $1 == "sortZ" ]]; then
		sortZ=1
	elif [[ $1 == "sortN" ]]; then
		sortZ=0
	elif [[ $1 == "incell" ]]; then
		incell=1
	fi
	shift
done

if [[  -f "$xsdfile" ]];then
	echo -e "    The xsdfile is : \033[31;1;4m$xsdfile\033[0m \n"
else
	echo -e "    The xsdfile($xsdfile) do not exist!!!"
	exit 0
fi

#sed -i 's/Hs/Co/g;s/Mt/Co/g'  $xsdfile





elementlist="	H He\
				Li Be  B  C  N  O  F Ne\
				Na Mg Al Si  P  S Cl Ar\
				 K Ca Sc Ti  V Cr Mn Fe Co Ni Cu Zn Ga Ge As Se Br Kr\
				Rb Sr  Y Zr Nb Mo Tc Ru Rh Pd Ag Cd In Sn Sb Te  I Xe\
				Cs Ba La Ce Pr Nd Pm Sm Eu Gd Tb Dy Ho Er Tm Yb Hf Ta  W Re Os Ir Pt Au Hg Tl Pb Bi Po At Rn\
				Fr Ra Ac Th Pa  U Np Pu An Cm Bk Cf Es Fm Md No Rf Db Sg Bh Hs Mt Ds Rg Cn Uut Uuq Uup Uuh Uus Uuo End"
if [[ "`grep Atom3d $xsdfile|grep Components| wc -l`" == 0  ]];then
	echo -e "    None elements information in $xsdfile file. Exit!\n    You can try \"xsd2pos -h\" for help!!!"
fi

grep Atom3d $xsdfile | grep Components | awk -F Name=\" '{print$2}' | awk -F \" '{print $1}' > temp_x2p_Name &
grep Atom3d $xsdfile | grep Components | awk -F Components=\" '{print$2}' | awk -F \" '{print $1}'|sed 's/,.*[0-9]//g' > temp_x2p_Element &
grep Atom3d $xsdfile | grep Components | awk -F Components=\" '{print$2}' | awk -F \" '{print $1}'|sed 's/,//g;s/[a-Z]//g' > temp_x2p_Iso &
grep Atom3d $xsdfile | grep Components | awk -F FormalSpin=\" '{print$2}' | awk -F \" '{print $1+0}'|sed 's/00//g' > temp_x2p_Spin &
if [[ "$incell" -eq 1 ]];then
	grep Atom3d $xsdfile | grep Components | awk -F XYZ=\" '{print$2}' | awk -F \" '{print $1}' |\
		awk -F \, '{printf"%18.12f%18.12f%18.12f\n",$1-($1<0?int($1-1):int($1)),$2-($2<0?int($2-1):int($2)),$3-($3<0?int($3-1):int($3))}' > temp_x2p_XYZ &
else
	grep Atom3d $xsdfile | grep Components | awk -F XYZ=\" '{print$2}' | awk -F \" '{print $1}' |awk -F \, '{printf"%18.12f%18.12f%18.12f\n",$1,$2,$3}' > temp_x2p_XYZ &
fi
#grep Atom3d $xsdfile | grep Components | awk -F RestrictedProperties=\" '{print$2}' | awk -F \" '{print $1}' | awk '{if($0 ~ "X"){x="F" }else{x="T"};if($0 ~ "Y"){y="F"}else{y="T"};if($0 ~ "Z"){z="F"}else{z="T"};{printf "%4s%4s%4s\n",x,y,z}}' > temp_x2p_TF
grep Atom3d $xsdfile | grep Components | awk -F RestrictedProperties=\" '{print$2}' | awk -F \" '{if($1=="FractionalXYZ"){print "F   F   F"}else{print "T   T   T"}}' > temp_x2p_TF &
grep SpaceGroup $xsdfile | awk -F Vector '{printf"%s\n%s\n%s\n",$2,$3,$4}' | awk -F"\"|," '{printf "% 14.8f %14.8f %14.8f\n",$2,$3,$4}' > temp_x2p_lattice &

wait

if [[ "$sortZ" -gt 0 ]];then
	paste -d:   temp_x2p_Element  temp_x2p_Name  temp_x2p_XYZ temp_x2p_TF temp_x2p_Spin temp_x2p_Iso | awk -F: '{printf"%s:%s\n",  match("'"$elementlist"'",$1),$0}' | sort -n -t: -k1 -k7 -k4.38,4.46 -k4.21,4.28 | grep -n : > temp_x2p_tot
else
	paste -d:   temp_x2p_Element  temp_x2p_Name  temp_x2p_XYZ temp_x2p_TF temp_x2p_Spin temp_x2p_Iso | awk -F: '{printf"%s:%s\n",  match("'"$elementlist"'",$1),$0}' | sort -n -t: -k1 -k7 -s | grep -n :  > temp_x2p_tot
fi


####shortinfo####
awk -F ':' '{print $3,$8+0,$3""$8+0}' temp_x2p_tot | uniq -c > temp_x2p_Elenum
awk -F ':' '{printf" %s %s %s\n", $3,$6,$8+0}' temp_x2p_tot | awk '{printf" %s%s  %s%s%s\n",$1,$5,$2,$3,$4}' > temp_x2p_EleTF
rm -f temp_x2p_shortinfo
for i in `cat temp_x2p_Elenum | awk '{print $4}'`
do
	echo  "`grep -w $i temp_x2p_Elenum | awk '{printf "%s %s %d\n", $2,$3,$1}'` `grep -w $i temp_x2p_EleTF | grep TTT |wc -l` `grep -w $i temp_x2p_EleTF | grep FFF |wc -l`" >> temp_x2p_shortinfo
done
#######
echo -e "    \033[4m Element       Numbers      \033[0m"
awk 'BEGIN{t=0;f=0;tot=0};{printf"     %3s %3s \033[1;33m%4d\033[0m\033[32m%4d\033[0m(T)\033[31m%4d\033[0m(F)\n",$1,$2,$3,$4,$5}{t+=$4;f+=$5;tot+=$3};END{printf"     ___________________________\n      Total  \033[1;33m%4d\033[0m\033[32m%4d\033[0m(T)\033[31m%4d\033[0m(F)\n",tot,t,f}' temp_x2p_shortinfo


####Creat POTCAR####
if [[ "$cpot" -gt 0 ]]; then
	if [[ -d "$potdir" ]];then
		rm -f POTCAR temp_x2p_potlog
		if [[ "$potmode" == "ori" ]]; then
			for i in `awk '{print $1}' temp_x2p_shortinfo `
			do
				cp $potdir/"$i"/*.psf ./ 
				echo "$i " >> temp_x2p_potlog
			done
		fi
		echo -e "    The Pseudopotentials Created! The Elements is : "
		echo -e "    (\033[1;35m`cat temp_x2p_potlog|xargs`\033[0m)\n"
	else
		echo -e "    The POTCAR folder ($potdir) is nonexistent!!!"
	fi
fi
################
if [[ ! -f Input.fdf ]]; then
        cp $examdir/Input.fdf .
fi
####creat POSCAR####
echo -e "%block LatticeVectors" >> Input.fdf
cat temp_x2p_lattice >> Input.fdf
echo -e "%endblock LatticeVectors\nLatticeConstant 1.000000 ang\nAtomicCoordinatesFormat Fractional" >> Input.fdf
awk -F : '{printf"%s    %s\n", $5, $6}' temp_x2p_tot >> POSCAR
if [[ "$posfm" == 4 ]]; then
	sed -i 6d POSCAR
fi
######
if [[ "$cscript" == -1 ]]; then
	if [[ -f siesta.script ]]; then
		cscript=1
	else
		cscript=0
	fi
fi
if [[ "$cscript" -gt 0 ]];then
	if [[ ! -f siesta.script ]]; then
		cp $examdir/siesta.script .
	fi
	#scriptname=$(echo ${xsdfile%.*} |sed 's/(/_/g;s/)/_/g' )

	sed -i 's/^#PBS -N .*/#PBS -N '"${xsdfile%.*}"'/g' siesta.script
fi
#END
echo -e "  <<<<<<<<<<<<<<<<<<<<<<<<<<<=>>>>>>>>>>>>>>>>>>>>>>>>>>>\n"
#rm -f temp_x2p_*  $xsdfile
if [[ ! -f constrain_information ]]; then
        python ~/script/pos2siesta.py
fi
